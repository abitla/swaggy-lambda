{
    "swagger": "2.0",
    "info": {
        "title": "Lambda",
        "description": "A serverless rest engine that rocks",
        "version": "{{version}}"
    },
    "host": "{{apiUrl}}",
    "schemes": [
        "{{scheme}}"
    ],
    "basePath": "/{{stage}}",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/model1": {
            "get": {
                "summary": "Get a list of available items",
                "description": "The Model1 endpoint returns all the Model1s in the system.\n",
                "parameters": [{
                    "name": "param1",
                    "in": "query",
                    "description": "test Param 1.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "param2",
                    "in": "query",
                    "description": "test Param 2.",
                    "required": false,
                    "type": "integer",
                    "maximum": 100
                }, {
                    "name": "param3",
                    "in": "query",
                    "description": "test Param 3.",
                    "required": false,
                    "type": "number",
                    "minimum": 100
                }, {
                    "name": "param4",
                    "in": "query",
                    "description": "test Param 4.",
                    "required": false,
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 8
                }, {
                    "name": "param5",
                    "in": "query",
                    "description": "test Param 5.",
                    "required": false,
                    "type": "string",
                    "enum": ["Item1", "Item2"]
                }],
                "tags": [
                    "Model1"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Model1s",
                        "schema": {
                            "$ref": "#/definitions/Model1s"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Update an existing Model1",
                "description": "Update an existing Model1",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "The model1",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Model1"
                    }
                }],
                "tags": [
                    "Model1"
                ],
                "responses": {
                    "201": {
                        "description": "Model1 Response",
                        "schema": {
                            "$ref": "#/definitions/Model1"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/model1/{modelId}": {
            "get": {
                "summary": "Get a specific instance of Model1",
                "description": "The Model1 endpoint returns a specific instance a Model1 configured in the system.\n",
                "parameters": [{
                    "name": "modelId",
                    "in": "path",
                    "description": "The id for this resource.",
                    "required": true,
                    "maxLength": 10,
                    "type": "string"
                }],
                "tags": [
                    "Model1"
                ],
                "responses": {
                    "200": {
                        "description": "A Model1",
                        "schema": {
                            "$ref": "#/definitions/Model1"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an existing Model1",
                "description": "Update an existing Model1",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "The model1",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Model1"
                    }
                }, {
                    "name": "modelId",
                    "in": "path",
                    "description": "The id of the resource",
                    "required": true,
                    "type": "string",
                    "maxLength": 10
                }],
                "tags": [
                    "Model1"
                ],
                "responses": {
                    "200": {
                        "description": "Model1 Response",
                        "schema": {
                            "$ref": "#/definitions/Model1"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/model1/{modelId}/model2": {
            "get": {
                "summary": "A child resource under a main resource",
                "description": "A child resource under a main resource",
                "parameters": [{
                    "name": "status",
                    "in": "query",
                    "description": "The status of the model2.",
                    "required": false,
                    "type": "string"
                }],
                "tags": [
                    "Model2"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Model2",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Model2s"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Insert a new Model2",
                "description": "Insert a new Model2",
                "parameters": [{
                    "name": "modelId",
                    "in": "path",
                    "description": "The parent id.",
                    "required": true,
                    "type": "string",
                    "maxLength": 5
                }, {
                    "name": "body",
                    "in": "body",
                    "description": "The model1",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/NewModel2"
                    }
                }],
                "tags": [
                    "Model2"
                ],
                "responses": {
                    "201": {
                        "description": "Model1 Response",
                        "schema": {
                            "$ref": "#/definitions/Model2"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "parameters": [{
                "name": "modelId",
                "in": "path",
                "description": "The parent id.",
                "required": true,
                "type": "string"
            }]
        },
        "/model3": {
            "get": {
                "summary": "Get a list of available items",
                "description": "The Model1 endpoint returns all the Model1s in the system.\n",
                "parameters": [{
                    "name": "pInteger",
                    "in": "query",
                    "description": "test an Int32.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "pLong",
                    "in": "query",
                    "description": "test an Int64.",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "pFloat",
                    "in": "query",
                    "description": "test Float.",
                    "required": false,
                    "type": "number",
                    "format": "float"
                }, {
                    "name": "pDouble",
                    "in": "query",
                    "description": "test Double.",
                    "required": false,
                    "type": "number",
                    "format": "double"
                }, {
                    "name": "pString",
                    "in": "query",
                    "description": "test String.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "bByte",
                    "in": "query",
                    "description": "test Byte.",
                    "required": false,
                    "type": "string",
                    "format": "byte"
                }, {
                    "name": "pBinary",
                    "in": "query",
                    "description": "test Binary.",
                    "required": false,
                    "type": "string",
                    "format": "binary"
                }, {
                    "name": "pBoolean",
                    "in": "query",
                    "description": "test Boolean.",
                    "required": false,
                    "type": "boolean"
                }, {
                    "name": "pDate",
                    "in": "query",
                    "description": "test Date.",
                    "required": false,
                    "type": "string",
                    "format": "date"
                }, {
                    "name": "pDateTime",
                    "in": "query",
                    "description": "test Date-Time.",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "pPassword",
                    "in": "query",
                    "description": "test Password.",
                    "required": false,
                    "type": "string",
                    "format": "password"
                }, {
                    "name": "pHeader",
                    "in": "header",
                    "description": "parameter passed in via header.",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }],
                "tags": [
                    "Model3"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Model3s",
                        "schema": {
                            "$ref": "#/definitions/Model3s"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/model4": {
            "get": {
                "summary": "Get a list of available items",
                "description": "The Model1 endpoint returns all the Model1s in the system.\n",
                "parameters": [{
                    "name": "value1",
                    "in": "query",
                    "description": "test a parameter with a default.",
                    "default": "something",
                    "type": "string"
                }],
                "tags": [
                    "Model4"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Model3s",
                        "schema": {
                            "$ref": "#/definitions/Model3s"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/model5": {
            "get": {
                "summary": "Get a list of available items",
                "description": "The Model5 endpoint returns all the Model5s in the system.\n",
                "parameters": [{
                    "name": "value1",
                    "in": "header",
                    "description": "test a parameter with a default.",
                    "required": "true",
                    "type": "string"
                }],
                "tags": [
                    "Model5"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Model3s",
                        "schema": {
                            "$ref": "#/definitions/Model3s"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Insert a new Model5",
                "description": "Insert a new Model5",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "The model5",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Model5"
                    }
                }],
                "tags": [
                    "Model5"
                ],
                "responses": {
                    "201": {
                        "description": "Model5 Response",
                        "schema": {
                            "$ref": "#/definitions/Model5"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Model1": {
            "description": "A sample model",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific resource",
                    "maxLength": 10
                },
                "integercode": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string",
                    "description": "A short human readable code for the model"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of model."
                }
            },
            "required": ["id", "integercode"]
        },
        "Model2": {
            "description": "A description of the Model2 instance",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific Model2 instance"
                },
                "type": {
                    "type": "string",
                    "description": "A short human readable code used to drive."
                },
                "state": {
                    "type": "string",
                    "description": "Display state of the instance."
                },
                "status": {
                    "type": "string",
                    "description": "Display status of the instance."
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Display last updated date of the Model2 instance."
                },
                "dateCreated": {
                    "type": "string",
                    "description": "Display created date of the Model2 instance."
                }
            }
        },
        "NewModel2": {
            "description": "A description of the Model2 instance",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "A short human readable code used to drive.",
                    "maxLength": 10
                },
                "state": {
                    "type": "integer",
                    "description": "Display state of the instance."
                },
                "status": {
                    "type": "string",
                    "description": "Display status of the instance."
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Display last updated date of the Model2 instance."
                },
                "dateCreated": {
                    "type": "string",
                    "description": "Display created date of the Model2 instance."
                },
                "submodel": {
                    "$ref": "#/definitions/Model3"
                }
            },
            "required": ["type", "lastUpdated", "dateCreated"]
        },
        "Model3": {
            "description": "A description of the Model3 instance",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A short human readable code used to drive.",
                    "maxLength": 10
                },
                "value1": {
                    "type1": "string",
                    "minLength": 1,
                    "description": "Display state of the instance."
                }
            },
            "required": ["id", "value1"]
        },
        "Model5": {
            "description": "A description of the Model5 instance",

            "allOf": [{
                "$ref": "#/definitions/Model3"
            }, {
                "type": "object",
                "properties": {

                    "value2": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 100
                    },
                    "value3": {
                        "type": "string",
                        "format": "date"
                    }
                }
            }]

        },
        "Model1s": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Model1"
            }
        },
        "Model2s": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Model2"
            }
        },
        "Model3s": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Model3"
            }
        },
        "Model5s": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Model5"
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}
